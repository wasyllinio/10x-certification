name: Backend Lint & Test

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - '.github/workflows/backend-lint.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - '.github/workflows/backend-lint.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache-dependency-path: backend/go.sum
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Cache golangci-lint
        uses: actions/cache@v4
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('backend/.golangci.yml') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-
      
      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: ./backend
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m
          working-directory: ./backend
      
      - name: Annotate PR
        if: github.event_name == 'pull_request'
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
          only-new-issues: true
          working-directory: ./backend

  vet:
    name: Go Vet
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache-dependency-path: backend/go.sum
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Run go vet
        run: go vet ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache-dependency-path: backend/go.sum
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./backend/coverage.html
      
      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const coveragePath = path.join('backend', 'coverage.out');
              if (fs.existsSync(coveragePath)) {
                const coverage = fs.readFileSync(coveragePath, 'utf8');
                // Extract coverage percentage
                const lines = coverage.split('\n');
                const total = lines.find(l => l.includes('total:'));
                if (total) {
                  const match = total.match(/(\d+\.\d+)/);
                  const percentage = match ? match[1] : 'unknown';
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: `## Test Coverage: ${percentage}%`
                  });
                }
              }
            } catch (error) {
              console.error('Failed to comment coverage:', error);
            }

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      
      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest
      
      - name: Run gosec
        run: gosec -severity medium -confidence medium ./...
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache-dependency-path: backend/go.sum
      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Build
        run: go build -o bin/api ./cmd/api/main.go
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-binary
          path: ./backend/bin/api
          retention-days: 1

